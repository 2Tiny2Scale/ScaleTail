services:
  
  # Tailscale Sidecar Configuration
  tailscale-pihole:
    image: tailscale/tailscale:latest # Image to be used
    container_name: tailscale-pihole # Name for local container management
    hostname: dns # Name used within your Tailscale environment
    environment:
      - TS_AUTHKEY=tskey-auth-<ADD-YOUR-AUTH-KEY-HERE>
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_SERVE_CONFIG=/config/serve.json # Tailsacale Serve configuration to expose the web interface on your local Tailnet - remove this line if not required
      - TS_USERSPACE=false
    volumes:
      - ${PWD}/pihole/config:/config # Config folder used to store Tailscale files - you may need to change the path
      - ${PWD}/pihole/tailscale-pihole/state:/var/lib/tailscale # Tailscale requirement - you may need to change the path
      - /dev/net/tun:/dev/net/tun # Network configuration for Tailscale to work
    cap_add:
      - net_admin # Tailscale requirement
      - sys_module # Tailscale requirement
    ports:
      - "0.0.0.0:53:53/udp" # Binding port 53/udp to the local network - may be removed if only exposure to your Tailnet is required
      - "0.0.0.0:53:53/tcp" # Binding port 53/tcp to the local network - may be removed if only exposure to your Tailnet is required
    healthcheck:
      test: ["CMD", "tailscale", "status"] # Check if Tailscale is running
      interval: 1m # How often to perform the check
      timeout: 10s # Time to wait for the check to succeed
      retries: 3 # Number of retries before marking as unhealthy
      start_period: 10s # Time to wait before starting health checks
    restart: always

  # Pi-Hole
  pihole:
    image: pihole/pihole:latest
    network_mode: service:tailscale-pihole # Sidecar configuration to route Pi-hole through Tailscale
    container_name: pihole
    environment:
      TZ: 'Europe/Amsterdam'
      # WEBPASSWORD: 'set a secure password here or it will be random'
    # Volumes store your data between container upgrades
    volumes:
      - ${PWD}/pihole/etc-pihole:/etc/pihole
      - ${PWD}/pihole/etc-dnsmasq.d:/etc/dnsmasq.d
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    depends_on:
      - tailscale-pihole
    healthcheck:
      test: ["CMD", "pgrep", "-f", "pihole-FTL"] # Check if AdGuard Home process is running
      interval: 1m # How often to perform the check
      timeout: 10s # Time to wait for the check to succeed
      retries: 3 # Number of retries before marking as unhealthy
      start_period: 30s # Time to wait before starting health checks
    restart: always