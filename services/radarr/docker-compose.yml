services:
  
  # Tailscale Sidecar Configuration
  tailscale-radarr:
    image: tailscale/tailscale:latest # Image to be used
    container_name: tailscale-radarr # Name for local container management
    hostname: radarr # Name used within your Tailscale environment
    environment:
      - TS_AUTHKEY=tskey-auth-<ADD-YOUR-AUTH-KEY-HERE>
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_SERVE_CONFIG=/config/serve.json # Tailsacale Serve configuration to expose the web interface on your local Tailnet - remove this line if not required
      - TS_USERSPACE=false
    volumes:
      - ${PWD}/radarr/config:/config # Config folder used to store Tailscale files - you may need to change the path
      - ${PWD}/radarr/tailscale-radarr/state:/var/lib/tailscale # Tailscale requirement - you may need to change the path
      - /dev/net/tun:/dev/net/tun # Network configuration for Tailscale to work
    cap_add:
      - net_admin # Tailscale requirement
      - sys_module # Tailscale requirement
    # If any DNS issues arise, use your preferred DNS provider by uncommenting the config below
    # dns: 
    #   - 1.1.1.1
    healthcheck:
      test: ["CMD", "tailscale", "status"] # Check if Tailscale is running
      interval: 1m # How often to perform the check
      timeout: 10s # Time to wait for the check to succeed
      retries: 3 # Number of retries before marking as unhealthy
      start_period: 10s # Time to wait before starting health checks
    restart: always

  # radarr
  radarr:
    image: radarr/server:latest
    network_mode: service:tailscale-radarr # Sidecar configuration to route radarr through Tailscale
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=TZ=Europe/Amsterdam
    volumes:
      - ${PWD}/radarr/config:/config
      - ${PWD}/media/movies:/movies #Optional
      - ${PWD}/downloadclient-downloads:/downloads' #Optional
    depends_on:
      - tailscale-radarr
    healthcheck:
      test: ["CMD", "pgrep", "-f", "Radarr"] # Check if Radarr process is running
      interval: 1m # How often to perform the check
      timeout: 10s # Time to wait for the check to succeed
      retries: 3 # Number of retries before marking as unhealthy
      start_period: 30s # Time to wait before starting health checks
    restart: always